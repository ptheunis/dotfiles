#!bash
# shellcheck disable=SC1090

source "$ZDOTDIR/env.zsh"

# oh-my-zsh
zstyle ':omz:update' mode disabled

plugins=(
  vi-mode
  zsh-syntax-highlighting
  you-should-use
  yarn-autocompletions
  fzf-yarn
)

# source
#. "$ZSH/.oh-my-zsh/oh-my-zsh.sh"
. "$ZDOTDIR/opt.zsh"
. "$ZDOTDIR/colors.zsh"
. "$ZDOTDIR/completions.zsh"
. "$ZDOTDIR/plugins.zsh"
#. "$ZDOTDIR/fzf.zsh"
. "$ZDOTDIR/functions.zsh"
. "$ZDOTDIR/options.zsh"
. "$ZDOTDIR/aliases.zsh"
. "$ZDOTDIR/vi.zsh"
#. "$ZDOTDIR/zoxide.zsh"


# to ensure there are no duplicates in the $PATH we call dedupe
#
dedupe

# ⚠️  SOFTWARE ⚠️
if [ ! -d "$HOME/.goenv" ]; then
  git clone https://github.com/syndbg/goenv.git ~/.goenv
fi
export GOENV_ROOT="$HOME/.goenv"
export PATH="$GOENV_ROOT/bin:$PATH"
eval "$(goenv init -)"
export PATH="$GOROOT/bin:$PATH"
export PATH="$PATH:$GOPATH/bin"
export GOPRIVATE="github.com/$GITUSER/*,gitlab.com/$GITUSER/*"
export GOBIN="$HOME/.local/bin"
export GOPROXY=direct
export CGO_ENABLED=0
export PYTHONDONTWRITEBYTECODE=2
export LC_COLLATE=C
export CFLAGS="-Wall -Wextra -Werror -O0 -g -fsanitize=address -fno-omit-frame-pointer -finstrument-functions"

if [ ! -f "$HOME/go/bin/gopls" ]; then
  go install golang.org/x/tools/gopls@latest
fi
if [ ! -f "$HOME/go/bin/gofumpt" ]; then
  go install mvdan.cc/gofumpt@latest
fi
if [ ! -f "$HOME/go/bin/revive" ]; then
  go install github.com/mgechev/revive@latest
fi
function go_update_tools {
  brew_update # called because of goenv
  go install github.com/rakyll/gotest@latest
  go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
  go install github.com/mgechev/revive@latest
  go install golang.org/x/tools/gopls@latest
  go install mvdan.cc/gofumpt@latest
  go install honnef.co/go/tools/cmd/staticcheck@2023.1
  go install golang.org/x/vuln/cmd/govulncheck@latest
  go install github.com/go-delve/delve/cmd/dlv@latest

  # documentation preview
  # go get golang.org/x/tools/godoc@v0.1.8
  # go get golang.org/x/tools/godoc/redirect@v0.1.8
  # go install golang.org/x/tools/cmd/godoc
}

# ----------------------------- dircolors ----------------------------
if _have dircolors; then
	if [[ -r "$HOME/dircolors/.dircolors" ]]; then
		eval "$(dircolors -b "$HOME/dircolors/.dircolors")"
	else
		eval "$(dircolors -b)"
	fi
fi

# Configuration you don't want as part of your main .zshrc
#
if [ -f "$HOME/.localrc" ]; then
  source "$HOME/.localrc"
fi

eval "$(starship init zsh)"
